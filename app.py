import streamlit as st # to build the web interface
import requests # to send the audio file to the backend API

'''
# SPEECH EMOTION RECOGNITION
'''
# Creates a page title

uploaded_file = st.file_uploader("Choose a .wav file")
# Let's the user upload a .wav file and assigns it to a variable

if uploaded_file is not None: # If a file has been uploaded:
    st.audio(uploaded_file, format='audio/wav') # It's played in the browser using Streamlit's audio player

    if st.button('Make prediction'): # If the user clicks in the button
        with st.spinner("Envoi à l'API..."): # A spinner + confetti show up
            st.snow() # Snow
            st.balloons() # Balloons
            files = {'my_file': uploaded_file} # Creates a dictionary with the uploaded file
            api_url = "http://localhost:8001/predict" # Calls an API
            response = requests.post(api_url, files=files) # Sends the uploaded file (.wav) to the API, and requests a response
            print("i hate github")
            print(response)
            result = response.json() # Stores the response generated by the API in a result variable
            emotion = result.get("emotion", "inconnue") # Extracts the emotion from the result, if not found returns unknown
            st.success(f"L'émotion prédite est : **{emotion}**")

# streamlit run app.py --> Pour regarder ce que ça donne
# https://docs.streamlit.io/
# https://streamlit.lewagon.ai/
# pyenv local speech_emotion_recogniton
